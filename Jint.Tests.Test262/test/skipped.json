[
  {
    "source": "language/expressions/assignment/fn-name-lhs-cover.js",
    "reason": "Currently quite impossible to detect if assignment target is CoverParenthesizedExpression"
  },
  {
    "source": "built-ins/RegExp/character-class-escape-non-whitespace.js",
    "reason": "Unicode support not built-in to .NET the same way, requires more work"
  },
  {
    "source": "built-ins/RegExp/property-escapes/character-class.js",
    "reason": "Unicode support not built-in to .NET the same way, requires more work"
  },
  {
    "source": "built-ins/RegExp/prototype/Symbol.match/builtin-infer-unicode.js",
    "reason": "Unicode support not built-in to .NET the same way, requires more work"
  },
  {
    "source": "built-ins/RegExp/prototype/Symbol.match/builtin-success-u-return-val-groups.js",
    "reason": "Unicode support not built-in to .NET the same way, requires more work"
  },
  {
    "source": "built-ins/RegExp/prototype/Symbol.match/u-advance-after-empty.js",
    "reason": "Unicode support not built-in to .NET the same way, requires more work"
  },
  {
    "source": "built-ins/RegExp/prototype/Symbol.replace/u-advance-after-empty.js",
    "reason": "Unicode support not built-in to .NET the same way, requires more work"
  },
  {
    "source": "built-ins/RegExp/prototype/Symbol.search/u-lastindex-advance.js",
    "reason": "Unicode support not built-in to .NET the same way, requires more work"
  },


  {
    "source": "built-ins/Function/prototype/toString/method-computed-property-name.js",
    "reason": "requires investigation how to process complex function name evaluation for property"
  },


  // http://www.ecma-international.org/ecma-262/#sec-block-level-function-declarations-web-legacy-compatibility-semantics
  {
    "source": "language/statements/let/block-local-closure-set-before-initialization.js",
    "reason": "not implemented (block level functions)"
  },
  {
    "source": "language/block-scope/shadowing/dynamic-lookup-from-closure.js",
    "reason": "not implemented (block level functions)"
  },
  {
    "source": "language/block-scope/shadowing/lookup-from-closure.js",
    "reason": "not implemented (block level functions)"
  },

  {
    "source": "language/statements/let/block-local-closure-set-before-initialization.js",
    "reason": "http://www.ecma-international.org/ecma-262/#sec-block-level-function-declarations-web-legacy-compatibility-semantics not implemented (block level functions)"
  },

  {
    "source": "built-ins/RegExp/S15.10.2.11_A1_T5.js",
    "reason": "Logic difference in .NET RegExp / skipped in ECMA tests too"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.11_A1_T7.js",
    "reason": "Logic difference in .NET RegExp / skipped in ECMA tests too"
  },
  {
    "source": "built-ins/RegExp/S15.10.4.1_A8_T2.js",
    "reason": "Logic difference in .NET RegExp / skipped in ECMA tests too"
  },
  {
    "source": "built-ins/RegExp/prototype/exec/S15.10.6.2_A1_T6.js",
    "reason": "Logic difference in .NET RegExp / skipped in ECMA tests too"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.5_A1_T4.js",
    "reason": "Logic difference in .NET RegExp / skipped in ECMA tests too"
  },
  {
    "source": "built-ins/RegExp/prototype/exec/u-lastindex-adv.js",
    "reason": "Esprima strips unicode sequence and match logic does not work"
  },
  {
    "source": "built-ins/String/raw/special-characters.js",
    "reason": "Windows line ending differences"
  },
  {
    "source": "built-ins/Symbol/species/builtin-getter-name.js",
    "reason": "Promise not implemented"
  },
  {
    "source": "language/expressions/object/method-definition/object-method-returns-promise.js",
    "reason": "Promise not implemented"
  },
  {
    "source": "built-ins/Symbol/species/subclassing.js",
    "reason": "subclassing not implemented"
  },
  {
    "source": "built-ins/Date/subclassing.js",
    "reason": "subclassing not implemented"
  },
  {
    "source": "built-ins/Date/parse/time-value-maximum-range.js",
    "reason": "parsing of large/small years not implemented in .NET (-271821, +271821)"
  },
  {
    "source": "built-ins/Proxy/enumerate/removed-does-not-trigger.js",
    "reason": "for-of not implemented"
  },
  {
    "source": "built-ins/Array/from/items-is-arraybuffer.js",
    "reason": "ArrayBuffer not implemented"
  },
  {
    "source": "built-ins/Array/prototype/concat/Array.prototype.concat_large-typed-array.js",
    "reason": "Uint8Array not implemented"
  },
  {
    "source": "built-ins/Array/prototype/concat/Array.prototype.concat_small-typed-array.js",
    "reason": "Uint8Array not implemented"
  },
  {
    "source": "built-ins/Map/prototype/clear/context-is-weakmap-object-throws.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/delete/context-is-weakmap-object-throws.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/entries/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/forEach/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/forEach/iterates-values-deleted-then-readded.js",
    "reason": "delete/add detection not implemented for map iterator during iteration"
  },
  {
    "source": "built-ins/Map/prototype/get/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/has/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/keys/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/set/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/size/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Map/prototype/values/does-not-have-mapdata-internal-slot-weakmap.js",
    "reason": "WeakMap not implemented"
  },
  {
    "source": "built-ins/Set/proto-from-ctor-realm.js",
    "reason": "realms not implemented"
  },
  {
    "source": "built-ins/Set/prototype/add/does-not-have-setdata-internal-slot-weakset.js",
    "reason": "WeakSet not implemented"
  },
  {
    "source": "built-ins/Set/prototype/clear/does-not-have-setdata-internal-slot-weakset.js",
    "reason": "WeakSet not implemented"
  },
  {
    "source": "built-ins/Set/prototype/delete/does-not-have-setdata-internal-slot-weakset.js",
    "reason": "WeakSet not implemented"
  },
  {
    "source": "built-ins/Set/prototype/entries/does-not-have-setdata-internal-slot-weakset.js",
    "reason": "WeakSet not implemented"
  },
  {
    "source": "built-ins/Set/prototype/foreach/does-not-have-setdata-internal-slot-weakset.js",
    "reason": "WeakSet not implemented"
  },
  {
    "source": "built-ins/Set/prototype/forEach/iterates-values-revisits-after-delete-re-add.js",
    "reason": "delete/add detection not implemented for set iterator during iteration"
  },
  {
    "source": "built-ins/Set/prototype/has/does-not-have-setdata-internal-slot-weakset.js",
    "reason": "WeakSet not implemented"
  },
  {
    "source": "built-ins/Set/prototype/values/does-not-have-setdata-internal-slot-weakset.js",
    "reason": "WeakSet not implemented"
  },
  {
    "source": "built-ins/Array/prototype/toLocaleString/primitive_this_value.js",
    "reason": "requires toLocaleString changes"
  },
  {
    "source": "built-ins/Array/prototype/toLocaleString/primitive_this_value_getter.js",
    "reason": "requires toLocaleString changes"
  },
  {
    "source": "built-ins/Object/prototype/toLocaleString/primitive_this_value_getter.js",
    "reason": "requires toLocaleString changes"
  },

  // experimentals start

  {
    "source": "built-ins/Array/prototype/flat/array-like-objects.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/bound-function-call.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/empty-array-elements.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/empty-object-elements.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/length.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/name.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/non-numeric-depth-should-not-throw.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/null-undefined-elements.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/positive-infinity.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flat/prop-desc.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flatMap/array-like-objects.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flatMap/bound-function-argument.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flatMap/depth-always-one.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flatMap/length.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flatMap/name.js",
    "reason": "experimental"
  },
  {
    "source": "built-ins/Array/prototype/flatMap/thisArg-argument.js",
    "reason": "experimental"
  },

  // experimentals end

  {
    "source": "built-ins/String/prototype/padEnd/observable-operations.js",
    "reason": "observables not implemented"
  },
  {
    "source": "built-ins/String/prototype/padStart/observable-operations.js",
    "reason": "observables not implemented"
  },
  {
    "source": "built-ins/StringIteratorPrototype/next/next-iteration-surrogate-pairs.js",
    "reason": "code point iteration not implemented"
  },
  {
    "source": "built-ins/Date/prototype/toTimeString/format.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Date/prototype/toString/format.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Date/parse/zero.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Date/prototype/toUTCString/format.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Date/prototype/toDateString/format.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-const-bound-names-fordecl-tdz.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-const-fresh-binding-per-iteration.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-decl-expr.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-let-bound-names-fordecl-tdz.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-let-destructuring.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-let-fresh-binding-per-iteration.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-lhs-let.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/scope-head-var-none.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for/head-const-fresh-binding-per-iteration.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for/head-let-destructuring.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for/head-let-fresh-binding-per-iteration.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Symbol/prototype/description/description-symboldescriptivestring.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Symbol/prototype/description/get.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Symbol/prototype/description/this-val-non-symbol.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Symbol/prototype/description/this-val-symbol.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "built-ins/Symbol/prototype/description/wrapper.js",
    "reason": "let/const not implemented"
  },
  {
    "source": "language/statements/for-in/head-var-bound-names-dup.js",
    "reason": "destructing not implemented"
  },
  {
    "source": "built-ins/Math/pow/int32_min-exponent.js",
    "reason": "const not implemented"
  },
  {
    "source": "language/expressions/assignment/dstr-obj-rest-put-const.js",
    "reason": "const not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-obj-rest-put-const.js",
    "reason": "const not implemented"
  },
  {
    "source": "language/statements/for-of/head-const-bound-names-fordecl-tdz.js",
    "reason": "const not implemented"
  },
  {
    "source": "language/statements/for-of/head-const-fresh-binding-per-iteration.js",
    "reason": "const not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-const-ary-ptrn-rest-obj-prop-id.js",
    "reason": "const not implemented"
  },
  {
    "source": "language/statements/for-of/head-let-bound-names-fordecl-tdz.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/statements/for-of/head-let-destructuring.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/statements/for-of/head-let-fresh-binding-per-iteration.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-let-ary-ptrn-rest-obj-prop-id.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-var-ary-ptrn-rest-obj-prop-id.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/template-literal/tv-line-terminator-sequence.js",
    "reason": "Line feed problems (git, windows, linux)"
  },
  {
    "source": "built-ins/Number/prototype/toFixed/range.js",
    "reason": "100 fraction digits is not supported due to .NET format specifier limitation"
  },
  {
    "source": "language/types/number/8.5.1.js",
    "reason": "C# can't distinguish 1.797693134862315808e+308 and 1.797693134862315708145274237317e+308"
  },

  // function behaviour to be implemented
  {
    "source": "language/expressions/function/scope-name-var-open-non-strict.js",
    "reason": "inner binding is immutable (from parameters) Expected SameValue(«null», «function() {{ ... }}») to be true"
  },
  {
    "source": "language/expressions/function/scope-name-var-open-strict.js",
    "reason": "inner binding rejects modification (from parameters) Expected a Error to be thrown but no exception was thrown at all"
  },

  // let support
  {
    "source": "language/expressions/assignment/dstr-array-rest-nested-obj-undefined-own.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/assignment/dstr-array-rest-nested-obj-undefined.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/assignment/dstr-array-rest-nested-obj-undefined-hole.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/statements/for/dstr-const-ary-ptrn-rest-obj-prop-id.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/statements/for/dstr-var-ary-ptrn-rest-obj-prop-id.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/statements/for/dstr-let-ary-ptrn-rest-obj-prop-id.js",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/arrow-function/dstr-ary-ptrn-elem-id-init-fn-name-cover.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/arrow-function/dstr-ary-ptrn-rest-obj-prop-id.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/arrow-function/dstr-dflt-ary-ptrn-rest-obj-prop-id.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/function/dstr-ary-ptrn-rest-obj-prop-id.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/function/dstr-dflt-ary-ptrn-rest-obj-prop-id.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/object/dstr-meth-ary-ptrn-rest-obj-prop-id.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/object/dstr-meth-dflt-ary-ptrn-rest-obj-prop-id.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-override-immutable.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-overrides-prev-properties.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-skip-non-enumerable.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-with-overrides.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-sngl-obj-ident.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-mult-spread.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-getter-descriptor.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-mult-spread-getter.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-getter-init.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-mult-obj-ident.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-mult-obj-ident.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-getter-descriptor.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-getter-init.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-mult-spread-getter.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-mult-spread.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-override-immutable.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-overrides-prev-properties.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-skip-non-enumerable.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-with-overrides.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-sngl-obj-ident.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-mult-obj-ident.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-getter-descriptor.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-getter-init.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-mult-spread-getter.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-mult-spread.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-override-immutable.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-overrides-prev-properties.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-skip-non-enumerable.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-with-overrides.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-sngl-obj-ident.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/array/spread-obj-symbol-property.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/new/spread-obj-symbol-property.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "language/expressions/call/spread-obj-symbol-property.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "built-ins/Object/entries/tamper-with-global-object.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "built-ins/Object/values/tamper-with-global-object.js",
    "mode": "strict",
    "reason": "let not implemented"
  },
  {
    "source": "built-ins/Object/keys/proxy-keys.js",
    "mode": "strict",
    "reason": "let not implemented"
  },


  // class support
  {
    "source": "built-ins/Function/prototype/toString/class-declaration-complex-heritage.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/class-declaration-explicit-ctor.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/class-declaration-implicit-ctor.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/class-expression-explicit-ctor.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/class-expression-implicit-ctor.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/getter-class-expression-static.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/getter-class-expression.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/getter-class-statement-static.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/getter-class-statement.js",
    "reason": "class not implemented"
  }, 
  {
    "source": "built-ins/Function/prototype/toString/method-class-expression-static.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/method-class-expression.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/method-class-statement-static.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/method-class-statement.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/setter-class-expression-static.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/setter-class-expression.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/setter-class-statement-static.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Function/prototype/toString/setter-class-statement.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/global-code/script-decl-lex.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/global-code/script-decl-lex-deletion.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/global-code/script-decl-var-collision.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/global-code/script-decl-lex-lex.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/global-code/decl-lex.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/let/dstr-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/global-code/decl-lex-deletion.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/let/dstr-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/const/dstr-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/const/dstr-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/dstr-dflt-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "built-ins/Array/prototype/concat/Array.prototype.concat_non-array.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/rest-parameters/with-new-target.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/dstr-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for/dstr-const-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for/dstr-let-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for/dstr-let-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for/dstr-const-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for/dstr-var-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for/dstr-var-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/dstr-dflt-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/dstr-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/lexical-super-property-from-within-constructor.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/lexical-supercall-from-immediately-invoked-arrow.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/lexical-super-property.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/arrow-function/lexical-super-call-from-within-constructor.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/function/dstr-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/function/dstr-dflt-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/function/dstr-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/function/dstr-dflt-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/object/dstr-meth-dflt-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/object/dstr-meth-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/object/dstr-meth-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/object/dstr-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/object/method-definition/name-invoke-ctor",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/object/method-definition/name-invoke-ctor.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/expressions/object/method-definition/name-prototype-prop.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-const-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-const-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-let-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-let-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-var-ary-ptrn-elem-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },
  {
    "source": "language/statements/for-of/dstr-var-obj-ptrn-id-init-fn-name-class.js",
    "reason": "class not implemented"
  },


  {
    "source": "language/expressions/object/accessor-name-computed-yield-id.js",
    "reason": "accessor / yield not implemented"
  },
  {
    "source": "language/expressions/object/accessor-name-computed.js",
    "reason": "yield not implemented"
  },
  {
    "source": "language/expressions/object/prop-dup-set-get-set.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/accessor-name-computed-err-to-prop-key.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/accessor-name-computed-err-unresolvable.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/accessor-name-computed-in.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/accessor-name-literal-numeric-leading-decimal.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/accessor-name-literal-numeric-non-canonical.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/fn-name-accessor-get.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/fn-name-accessor-set.js",
    "reason": "accessor not implemented"
  },
  {
    "source": "language/expressions/object/method-definition/name-prop-name-yield-id.js",
    "reason": "yield not implemented"
  },


  {
    "source": "language/expressions/object/method.js",
    "reason": "super not implemented"
  },
  {
    "source": "language/expressions/object/setter-super-prop.js",
    "reason": "super not implemented"
  },
  {
    "source": "language/expressions/object/getter-super-prop.js",
    "reason": "super not implemented"
  },


  {
    "source": "language/expressions/object/fn-name-arrow.js",
    "source": "language/expressions/arrow-function/scope-paramsbody-var-open.js",
    "reason": "not implemented: Creation of new variable environment for the function body (as distinct from that for the function's parameters)"
  },
  {
    "source": "language/expressions/function/scope-paramsbody-var-open.js",
    "reason": "not implemented: Creation of new variable environment for the function body (as distinct from that for the function's parameters)"
  },
  {
    "source": "language/expressions/object/scope-meth-paramsbody-var-open.js",
    "reason": "not implemented: Creation of new variable environment for the function body (as distinct from that for the function's parameters)"
  },
  {
    "source": "language/expressions/object/scope-setter-paramsbody-var-open.js",
    "reason": "not implemented: Creation of new variable environment for the function body (as distinct from that for the function's parameters)"
  },

  {
    "source": "built-ins/Object/prototype/toString/proxy-function.js",
    "reason": "generators not implemented"
  },

  // Esprima problems

  {
    "source": "language/statements/for-of/dstr-obj-id-init-let.js",
    "reason": "Esprima problem"
  },
  {
    "source": "language/statements/for/head-lhs-let.js",
    "reason": "Esprima problem"
  },
  {
    "source": "language/expressions/object/yield-non-strict-access.js",
    "reason": "Esprima problem"
  },
  {
    "source": "language/expressions/object/yield-non-strict-syntax.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/prototype/source/value-u.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/prototype/source/value-line-terminator.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.13_A1_T1.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.13_A1_T17.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.13_A1_T2.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.13_A2_T1.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.13_A2_T2.js",
    "reason": "Esprima problem"
  },
  {
    "source": "built-ins/RegExp/S15.10.2.13_A2_T8.js",
    "reason": "Esprima problem"
  },
  {
    "source": "language/expressions/object/let-non-strict-access.js",
    "reason": "Esprima problem"
  },
  {
    "source": "language/expressions/object/let-non-strict-syntax.js",
    "reason": "Esprima problem"
  },
  {
    "source": "language/expressions/assignment/dstr-obj-id-identifier-yield-ident-valid.js",
    "reason": "Esprima problem"
  },
  {
    "source": "language/statements/for-of/dstr-obj-id-identifier-yield-ident-valid.js",
    "reason": "Esprima problem"
  },
]